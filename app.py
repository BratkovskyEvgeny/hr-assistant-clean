import streamlit as st


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="ü§ñ HR Assistant",
    page_icon="üìù",
    layout="wide",
    initial_sidebar_state="collapsed",
)

# –°—Ç–∏–ª–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
st.markdown(
    """
    <style>
    /* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
    .main {
        background-color: #0E1117;
        color: #FFFFFF;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ */
    .stApp {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }
    
    /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    @keyframes slideIn {
        from { transform: translateX(-20px); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    
    @keyframes scaleIn {
        from { transform: scale(0.95); opacity: 0; }
        to { transform: scale(1); opacity: 1; }
    }
    
    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }
    
    /* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã */
    .fade-in {
        animation: fadeIn 0.5s ease-out forwards;
    }
    
    .slide-in {
        animation: slideIn 0.5s ease-out forwards;
    }
    
    .scale-in {
        animation: scaleIn 0.5s ease-out forwards;
    }
    
    .pulse {
        animation: pulse 2s infinite;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
    h1, h2, h3 {
        color: #FFFFFF;
        font-weight: 600;
        margin-bottom: 1rem;
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
    .stButton>button {
        background-color: #FF4B4B;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 0.5rem 1rem;
        font-weight: 500;
        transition: all 0.3s ease;
        opacity: 0;
        animation: scaleIn 0.5s ease-out forwards;
    }
    
    .stButton>button:hover {
        background-color: #FF6B6B;
        box-shadow: 0 2px 8px rgba(255, 75, 75, 0.3);
        transform: translateY(-2px);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π */
    .stTextArea>div>div>textarea {
        background-color: #262730;
        color: #FFFFFF;
        border: 1px solid #3E3E3E;
        border-radius: 4px;
        transition: all 0.3s ease;
        opacity: 0;
        animation: slideIn 0.5s ease-out forwards;
    }
    
    .stTextArea>div>div>textarea:focus {
        border-color: #FF4B4B;
        box-shadow: 0 0 0 2px rgba(255, 75, 75, 0.2);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ */
    .stProgress .st-bo {
        background-color: #FF4B4B;
        opacity: 0;
        animation: scaleIn 0.5s ease-out forwards;
    }
    
    .stProgress .st-bp {
        background-color: #FF6B6B;
        transition: width 0.5s ease-out;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤ */
    .stAlert {
        background-color: #262730;
        border: 1px solid #3E3E3E;
        border-radius: 4px;
        color: #FFFFFF;
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫ */
    .stTabs [data-baseweb="tab-list"] {
        background-color: #262730;
        border-radius: 4px;
        padding: 0.5rem;
        opacity: 0;
        animation: slideIn 0.5s ease-out forwards;
    }
    
    .stTabs [data-baseweb="tab"] {
        color: #FFFFFF;
        transition: all 0.3s ease;
    }
    
    .stTabs [data-baseweb="tab"]:hover {
        background-color: #3E3E3E;
        transform: translateY(-2px);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è –º–µ—Ç—Ä–∏–∫ */
    .stMetric {
        background-color: #262730;
        border-radius: 4px;
        padding: 1rem;
        margin: 0.5rem 0;
        opacity: 0;
        animation: scaleIn 0.5s ease-out forwards;
        transition: all 0.3s ease;
    }
    
    .stMetric:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ */
    .skill-item {
        background-color: #262730;
        border-radius: 4px;
        padding: 0.8rem 1.2rem;
        margin: 0.5rem 0;
        border: 1px solid #3E3E3E;
        opacity: 0;
        animation: slideIn 0.5s ease-out forwards;
        transition: all 0.3s ease;
    }
    
    .skill-item:hover {
        transform: translateX(10px);
        background-color: #3E3E3E;
        border-color: #FF4B4B;
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ */
    .stFileUploader>div {
        background-color: #262730;
        border: 1px solid #3E3E3E;
        border-radius: 4px;
        padding: 1rem;
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
        transition: all 0.3s ease;
    }
    
    .stFileUploader>div:hover {
        border-color: #FF4B4B;
        transform: translateY(-2px);
    }
    
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π */
    hr {
        border-color: #3E3E3E;
        margin: 2rem 0;
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
    }
    
    /* –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ */
    .header-animation {
        opacity: 0;
        animation: fadeIn 1s ease-out forwards;
    }
    
    .header-animation h1 {
        animation: pulse 2s infinite;
    }
    </style>
""",
    unsafe_allow_html=True,
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown(
    """
    <div class='header-animation' style='text-align: center; margin-bottom: 3rem;'>
        <h1 style='font-size: 2.5rem; margin-bottom: 1rem;'>
            ü§ñ HR Assistant
        </h1>
        <p style='color: #9CA3AF; font-size: 1.2rem;'>
            –û—Ü–µ–Ω–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—é–º–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –≤–∞–∫–∞–Ω—Å–∏–∏
        </p>
    </div>
""",
    unsafe_allow_html=True,
)

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
st.markdown("### üìã –û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏")
job_description = st.text_area(
    "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏",
    height=200,
    help="–û–ø–∏—à–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤–∞–∫–∞–Ω—Å–∏–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç",
    placeholder="–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –∑–¥–µ—Å—å...",
)

st.markdown("### üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—é–º–µ")
uploaded_file = st.file_uploader(
    "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–∑—é–º–µ (PDF –∏–ª–∏ DOCX)",
    type=["pdf", "docx"],
    help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö PDF –∏ DOCX",
)

if uploaded_file is not None and job_description:
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞
    with st.spinner("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∞–Ω–∞–ª–∏–∑—É..."):
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ä–µ–∑—é–º–µ
        resume_text = extract_text_from_file(uploaded_file)
        st.success("‚úÖ –¢–µ–∫—Å—Ç –∏–∑ —Ä–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω")

    with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∑—é–º–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º..."):
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        analysis_results = analyze_skills(job_description, resume_text)
        st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω")

    st.markdown("### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
    if analysis_results:
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ö–æ–∂–µ—Å—Ç—å —Å—Ç–µ–∫–æ–≤
        stack_similarity = analysis_results.get("similarity", 0.0)
        st.metric(
            "–°—Ö–æ–∂–µ—Å—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–µ–∫–∞",
            f"{stack_similarity:.1%}",
            delta=f"{stack_similarity - 0.5:.1%}",
            delta_color="normal" if stack_similarity >= 0.5 else "inverse",
        )

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏ –ª–∏—à–Ω–∏–µ –Ω–∞–≤—ã–∫–∏
        missing_skills = analysis_results.get("missing_skills", set())
        extra_skills = analysis_results.get("extra_skills", set())

        if missing_skills or extra_skills:
            col1, col2 = st.columns(2)

            with col1:
                if missing_skills:
                    st.warning("**–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**")
                    for skill in sorted(missing_skills):
                        st.write(f"- {skill}")
                else:
                    st.success("**–í—Å–µ —Ç—Ä–µ–±—É–µ–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Ä–µ–∑—é–º–µ**")

            with col2:
                if extra_skills:
                    st.info("**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ —Ä–µ–∑—é–º–µ:**")
                    for skill in sorted(extra_skills):
                        st.write(f"- {skill}")
                else:
                    st.info("**–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ —Ä–µ–∑—é–º–µ**")

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ LLM-–∞–Ω–∞–ª–∏–∑–∞
    if uploaded_file is not None and job_description:
        if st.button("–ì–ª—É–±–æ–∫–∏–π LLM-–∞–Ω–∞–ª–∏–∑ (DistilGPT-2)"):
            with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é LLM..."):
                prompt = f"""
–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏:
{job_description}

–¢–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ:
{resume_text}

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π:
1. –ö–∞–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –æ—Ç—Ä–∞–∂–µ–Ω—ã –≤ —Ä–µ–∑—é–º–µ?
2. –ö–∞–∫–∏–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –µ—Å—Ç—å —É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞?
3. –ö–∞–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ä–µ–∑—é–º–µ?
"""
                result = query_llm(prompt)
                st.markdown("### üìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã LLM-–∞–Ω–∞–ª–∏–∑–∞ (DistilGPT-2)")
                st.write(result)
