import os
import re

import PyPDF2
import requests
import streamlit as st
from sentence_transformers import SentenceTransformer

# Путь для кэширования модели
CACHE_DIR = os.path.join(os.path.dirname(__file__), "model_cache")

# Инициализация модели для многоязычного анализа
model = None

# API URL для Hugging Face
API_URL = "https://api-inference.huggingface.co/models/distilgpt2"
HEADERS = {"Authorization": f"Bearer {os.environ.get('HF_TOKEN')}"}


@st.cache_resource
def get_model() -> SentenceTransformer:
    """Получает модель с кэшированием"""
    try:
        with st.spinner("Загрузка модели для анализа текста..."):
            return SentenceTransformer(
                "paraphrase-multilingual-MiniLM-L12-v2",
                cache_folder=CACHE_DIR,
                use_auth_token=True,
            )
    except Exception as e:
        st.error(f"Ошибка при загрузке модели: {str(e)}")
        return None


def extract_skills(text):
    """Извлекает навыки из текста"""
    # Разбиваем текст на слова
    words = re.findall(r"\b\w+\b", text.lower())

    # Фильтруем короткие слова и стоп-слова
    stop_words = {
        # Общие стоп-слова
        "и",
        "в",
        "во",
        "не",
        "что",
        "с",
        "со",
        "как",
        "а",
        "то",
        "все",
        "она",
        "так",
        "его",
        "но",
        "да",
        "ты",
        "к",
        "у",
        "же",
        "вы",
        "за",
        "бы",
        "по",
        "только",
        "ее",
        "мне",
        "было",
        "вот",
        "от",
        "меня",
        "еще",
        "нет",
        "о",
        "из",
        "ему",
        "теперь",
        "когда",
        "даже",
        "ну",
        "вдруг",
        "ли",
        "если",
        "уже",
        "или",
        "ни",
        "быть",
        "был",
        "него",
        "до",
        "вас",
        "нибудь",
        "опять",
        "уж",
        "вам",
        "ведь",
        "там",
        "потом",
        "себя",
        "ничего",
        "ей",
        "может",
        "они",
        "тут",
        "где",
        "есть",
        "надо",
        "ней",
        "для",
        "мы",
        "тебя",
        "их",
        "чем",
        "была",
        "сам",
        "чтоб",
        "без",
        "будто",
        "чего",
        "раз",
        "тоже",
        "себе",
        "под",
        "будет",
        "ж",
        "тогда",
        "кто",
        "этот",
        "того",
        "потому",
        "этого",
        "какой",
        "совсем",
        "ним",
        "здесь",
        "этом",
        "один",
        "почти",
        "мой",
        "тем",
        "чтобы",
        "нее",
        "сейчас",
        "были",
        "куда",
        "зачем",
        "всех",
        "никогда",
        "можно",
        "при",
        "на",
        "об",
        "я",
        "а",
        "б",
        "в",
        "г",
        "д",
        "е",
        "ж",
        "з",
        "и",
        "й",
        "к",
        "л",
        "м",
        "н",
        "о",
        "п",
        "р",
        "с",
        "т",
        "у",
        "ф",
        "х",
        "ц",
        "ч",
        "ш",
        "щ",
        "ъ",
        "ы",
        "ь",
        "э",
        "ю",
        "я",
        # Дополнительные стоп-слова из вакансии
        "баз",
        "будут",
        "вакансии",
        "валюта",
        "векторизованных",
        "верим",
        "владельцев",
        "внедрение",
        "внедрить",
        "выполнять",
        "делать",
        "достаточно",
        "драгоценные",
        "жизнь",
        "задачу",
        "знание",
        "знаний",
        "инструмент",
        "интеллект",
        "конкретного",
        "которые",
        "который",
        "легче",
        "лет",
        "лучше",
        "металлы",
        "название",
        "нам",
        "наш",
        "обязательно",
        "опыта",
        "организация",
        "пайплайна",
        "перед",
        "полученного",
        "помогает",
        "продуктов",
        "промышленное",
        "процесса",
        "процессе",
        "работу",
        "разработчика",
        "ранжирование",
        "реализация",
        "роли",
        "сильных",
        "слабых",
        "собой",
        "создания",
        "создать",
        "ставим",
        "сторон",
        "требования",
        "уровне",
        "усиливает",
        "цепочек",
        "часть",
        "это",
        "эффективные",
        # Технические термины, которые не являются навыками
        "middle",
        "middleware",
        "backend",
        "frontend",
        "fullstack",
        "devops",
        "qa",
        "ui",
        "ux",
        "api",
        "rest",
        "graphql",
        "sql",
        "nosql",
        "orm",
        "mvc",
        "mvvm",
        "mvv",
        "crud",
        "cicd",
        "git",
        "svn",
        "jira",
        "confluence",
        "agile",
        "scrum",
        "kanban",
        "waterfall",
        "sdlc",
        "tdd",
        "bdd",
        "ddd",
        "oop",
        "fp",
        "soa",
        "microservices",
        "monolith",
        "serverless",
        "cloud",
        "aws",
        "azure",
        "gcp",
        "heroku",
        "digitalocean",
        "vps",
        "vds",
        "vm",
        "container",
        "docker",
        "kubernetes",
        "swarm",
        "mesos",
        "nomad",
        "rancher",
        "openshift",
        "jenkins",
        "travis",
        "circleci",
        "gitlab",
        "github",
        "bitbucket",
        "gitlabci",
        "githubactions",
        "teamcity",
        "bamboo",
        "sonar",
        "sonarqube",
        "nexus",
        "artifactory",
        "maven",
        "gradle",
        "npm",
        "yarn",
        "pip",
        "composer",
        "bundler",
        "cargo",
        "go",
        "rust",
        "python",
        "java",
        "kotlin",
        "scala",
        "groovy",
        "clojure",
        "ruby",
        "php",
        "perl",
        "javascript",
        "typescript",
        "coffeescript",
        "dart",
        "swift",
        "objectivec",
        "c",
        "cpp",
        "csharp",
        "fsharp",
        "vb",
        "vbnet",
        "delphi",
        "pascal",
        "fortran",
        "cobol",
        "basic",
        "assembly",
        "lisp",
        "scheme",
        "haskell",
        "erlang",
        "elixir",
        "ocaml",
        "f",
        "d",
        "nim",
        "crystal",
        "zig",
        "v",
        "julia",
        "r",
        "matlab",
        "octave",
        "scilab",
        "maxima",
        "maple",
        "mathematica",
        "wolfram",
        "sage",
        "gap",
        "magma",
        "singular",
        "coq",
        "agda",
        "idris",
        "lean",
        "isabelle",
        "hol",
        "acl2",
        "pvsl",
        "why3",
        "frama",
        "spark",
        "ada",
        "eiffel",
        "oberon",
        "modula",
        "component",
        "pascal",
        "algol",
        "simula",
        "smalltalk",
        "self",
        "io",
        "ioke",
        "rebol",
        "red",
        "factor",
        "forth",
        "postscript",
        "logo",
        "lua",
        "luau",
        "terra",
        "moonscript",
        "teal",
        "haxe",
        # Дополнительные стоп-слова из резюме
        "1основной",
        "2023",
        "2024",
        "2опыт",
        "аndas",
        "аsk",
        "автоматизации",
        "автоматизация",
        "автотестов",
        "адаптация",
        "академия",
        "активно",
        "активное",
        "альфа",
        "аналитиками",
        "аналитики",
        "аналитиков",
        "аналитическая",
        "аналитическим",
        "аналитических",
        "андрей",
        "аномалий",
        "базами",
        "базе",
        "банк",
        "банка",
        "банковских",
        "библиотеками",
        "бизнес",
        "валидация",
        "веб",
        "ведение",
        "ведения",
        "версий",
        "взаимодействие",
        "взаимодействия",
        "взаимодействует",
        "визуализации",
        "визуализирует",
        "витрин",
        "включая",
        "владеет",
        "внешними",
        "внимателен",
        "выбору",
        "выявление",
        "выявления",
        "гипотез",
        "года",
        "данные",
        "данными",
        "дело",
        "деталям",
        "деятельности",
        "документации",
        "документирование",
        "документирования",
        "донести",
        "дообучение",
        "других",
        "еst",
        "задачи",
        "закономерностей",
        "запросов",
        "знания",
        "знаниями",
        "извлечения",
        "имеет",
        "инженерами",
        "инженерной",
        "инженеров",
        "инсайтов",
        "инструментами",
        "инструментов",
        "инструменты",
        "интеграцией",
        "интеллектуальная",
        "интерактивных",
        "использование",
        "использует",
        "исследовательский",
        "исследовательского",
        "источников",
        "кирова",
        "классификации",
        "ключевых",
        "кода",
        "командами",
        "команде",
        "командой",
        "коммуникабелен",
        "комплексного",
        "компонентов",
        "контроля",
        "кредиты",
        "лечебное",
        "машинного",
        "медицинская",
        "менеджерами",
        "менеджеров",
        "методов",
        "метрик",
        "моделей",
        "моделирования",
        "навыками",
        "навыки",
        "написания",
        "направленная",
        "настройки",
        "обеспечение",
        "обладает",
        "области",
        "образованиевоенно",
        "обучение",
        "обучению",
        "описательной",
        "оптимальных",
        "оптимизация",
        "опытом",
        "основе",
        "основной",
        "отчётов",
        "пайплайнов",
        "пакетными",
        "платежи",
        "платформа",
        "подготовка",
        "подготовки",
        "поддержки",
        "поддержку",
        "подходов",
        "получения",
        "помощью",
        "понятно",
        "последующего",
        "построения",
        "потоками",
        "потоковыми",
        "практическими",
        "презентации",
        "применение",
        "применением",
        "принятия",
        "проведение",
        "проведения",
        "проверка",
        "прогнозирования",
        "проектной",
        "прототипирования",
        "прототипов",
        "процессах",
        "процессов",
        "рandas",
        "рlum",
        "работает",
        "работать",
        "работе",
        "разработки",
        "разработкой",
        "результатов",
        "результаты",
        "рекомендаций",
        "решениям",
        "решениями",
        "риски",
        "сбор",
        "сбора",
        "сервисов",
        "систем",
        "система",
        "системами",
        "совместно",
        "способствует",
        "среде",
        "статистики",
        "статистических",
        "статистического",
        "стек",
        "также",
        "такими",
        "тестирования",
        "трансформации",
        "трендов",
        "умеет",
        "финтеханалитическая",
        "финтехплатформа",
        "фичеринжиниринг",
        "формирования",
        "целей",
        "централизованная",
        "через",
        "эффективных",
    }

    # Фильтруем слова
    skills = {word for word in words if len(word) > 2 and word not in stop_words}

    return skills


def extract_text_from_file(file):
    """Извлекает текст из загруженного файла (PDF или DOCX)"""
    try:
        if file.type == "application/pdf":
            # Читаем PDF
            pdf_reader = PyPDF2.PdfReader(file)
            text = ""
            for page in pdf_reader.pages:
                text += page.extract_text()
            return text
        elif (
            file.type
            == "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        ):
            # Читаем DOCX
            doc = docx.Document(file)
            text = "\n".join([paragraph.text for paragraph in doc.paragraphs])
            return text
        else:
            st.error("Неподдерживаемый формат файла")
            return ""
    except Exception as e:
        st.error(f"Ошибка при чтении файла: {str(e)}")
        return ""


def query_llm(prompt):
    """Отправляет запрос к LLM через Hugging Face API"""
    try:
        response = requests.post(
            API_URL,
            headers=HEADERS,
            json={"inputs": prompt, "parameters": {"return_full_text": False}},
        )
        response.raise_for_status()
        return response.json()[0]["generated_text"]
    except Exception as e:
        st.error(f"Ошибка при запросе к LLM: {str(e)}")
        return "Не удалось получить ответ от модели"


@st.cache_data
def analyze_skills(job_description, resume_text):
    """Анализирует соответствие навыков"""
    try:
        # Извлекаем навыки из описания вакансии и резюме
        job_skills = extract_skills(job_description)
        resume_skills = extract_skills(resume_text)

        # Находим отсутствующие и лишние навыки
        missing_skills = job_skills - resume_skills
        extra_skills = resume_skills - job_skills

        # Вычисляем схожесть
        similarity = (
            len(job_skills & resume_skills) / len(job_skills) if job_skills else 0.0
        )

        # Группируем навыки по категориям
        missing_tech = {
            skill
            for skill in missing_skills
            if skill
            in {
                "python",
                "numpy",
                "pandas",
                "matplotlib",
                "seaborn",
                "plotly",
                "docker",
                "chromadb",
                "langchain",
                "llm",
                "data",
                "scientist",
            }
        }
        missing_other = missing_skills - missing_tech

        extra_tech = {
            skill
            for skill in extra_skills
            if skill
            in {
                "python",
                "numpy",
                "pandas",
                "matplotlib",
                "seaborn",
                "plotly",
                "docker",
                "chromadb",
                "langchain",
                "llm",
                "data",
                "scientist",
            }
        }
        extra_other = extra_skills - extra_tech

        return {
            "missing_tech": missing_tech,
            "missing_other": missing_other,
            "extra_tech": extra_tech,
            "extra_other": extra_other,
            "similarity": similarity,
        }

    except Exception as e:
        st.error(f"Ошибка при анализе навыков: {str(e)}")
        return {
            "missing_tech": set(),
            "missing_other": set(),
            "extra_tech": set(),
            "extra_other": set(),
            "similarity": 0.0,
        }
